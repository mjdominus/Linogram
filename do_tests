#!/usr/bin/perl

my $N = 0;
my $dir = shift || ".";

my @inputs;
if (@ARGV) {
  @inputs = @ARGV;
} else {
  opendir  my ($t), $dir or die "opendir $dir: $!";
  @inputs = sort grep !/^\./, grep /-i$/, readdir $t;
}

print "1..", scalar(@inputs), "\n";

sub diff_report {
  my ($a, $b) = @_;
  my @r;
  while (@$a && @$b) {
    my ($A, $B) = ($a->[0], $b->[0]);
    if ($A lt $B) {
      push @r, "+ $A";
      shift @$a;
    } elsif ($A gt $B) {
      push @r, "- $B";
      shift @$b;
    } else {
      shift @$a;
      shift @$b;
    }
  }
  push @r, map "+ $_", @$a;
  push @r, map "- $_", @$b;
  return \@r;
}

for my $infile (@inputs) {
  $infile =~ s/-i$// or die "input $input??";
  my $input = "$dir/$infile-i";
  ++$N;
  my $output = "$dir/$infile-o";
  my $stamp = "$dir/.$infile-o";

  if (-e($stamp) &&
      (-M($stamp) < -M("$input") || -M($stamp) < -M($output))) {
    print "ok $N - $infile skipped (unchanged)\n";
    next;
  }
  my @input = sort qx{./linogram.pl -P testutils.pl $input 2> /dev/null};
  my @output = sort qx{cat $output};
  chomp @input;
  chomp @output;
  my $dr = diff_report(\@input, \@output);
  if (@$dr) {
    print "# $input -> $output\n";
    print map "# $_\n", @$dr;
    print "not ok $N\n";
    push @BAD, $infile;
  } else {
    open my($z), ">", $stamp;
    utime undef, undef, $stamp;
    print "ok $N # $infile \n";
  }
}

if (@BAD) {
  print join "\n", map("# $_", "Failed:", @BAD), "";
}
